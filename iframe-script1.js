const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/, phoneRegex = /^\+?\d{1,4}?[-.\s]?(\(?\d{1,4}?\))?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}$/, nameRegex = /^[\p{L}\p{M}'\s.-]+$/u, emailKeywords = ["Email", "email", "invitee_email", "hemail", "cemail", "payer_email", "checkoutemail", "customer_email", "email-address-lead", "email-lead", "buyer_email", "billing_email", "inf_field_Email", "EMAIL", "email_address", "emailAddress", "email-address", "he", "cf-email", "mailid", "mail"], nameKeywords = ["billing_first_name", "billing_last_name", "name", "enter your name", "fullname", "full-name", "full name", "first name", "last name", "first-name", "f-name", "first_name", "f_name", "f name", "firstname", "First Name", "firstName", "FirstName", "fname", "fname-lead", "fname_lead", "last-name", "l-name", "last_name", "l_name", "l name", "lastname", "Last Name", "lastName", "LastName", "lname", "lname-lead", "lname_lead", "surname", "Surname", "sur_name", "full_name", "complete-name", "complete_name", "complete name", "completename", "Full Name", "fullName", "FullName", "name-lead", "name_lead"], phoneKeywords = ["billing_phone", "text_reminder_number", "sms_number", "answer_", "inf_custom_PhonenumberorSkypeID", "inf_field_Phone1", "Phone1", "phone", "mobile", "customer_valid_phone", "Phone Number", "Phone", "tel", "phone-lead", "phone_lead", "phone_number", "phoneNumber", "phone-number", "phone_number_lead", "phone_number-lead", "ph", "cellPhoneNumber", "phonenumber", "phone number", "Enter your phone number"]; let lastInputValues = {}; const isEqual = e => { const a = Object.keys(e), n = Object.keys(lastInputValues); if (a.length !== n.length) return lastInputValues = { ...e }, !1; for (let n of a) if (e[n] !== lastInputValues[n]) return lastInputValues = { ...e }, !1; return !0 }, handleEvent = () => { console.log("called"); const e = {}, a = new Set, n = Array.from(document.querySelectorAll("input")); let l = ["text", "email", "tel"]; if (n.forEach((n => { if (l.includes(n.type)) { const l = n.value.trim(), m = [n.name.toLowerCase(), n.type.toLowerCase(), n.placeholder.toLowerCase(), n.className.toLowerCase()], t = (e, a) => e.some((e => inputContainsKeyword(e, a))), s = t(m, phoneKeywords), o = t(m, emailKeywords), r = t(m, nameKeywords), i = l.replace(/[-,()_]/g, "").split(" ").join(""), d = phoneRegex.test(i), u = emailRegex.test(l), h = nameRegex.test(l); s && d && (e.phone = i, a.add(l)), o && u && (e.email = l, a.add(l)), r && h && (e.name = e.name && null !== e.name ? e.name + " " + l : l, a.add(l)), s && o && !a.has(l) && (u ? e.email = l : d && (e.phone = i), a.add(l)), s && r && !a.has(l) && (h ? e.name = e.name && null !== e.name ? e.name + " " + l : l : d && (e.phone = i), a.add(l)), o && r && !a.has(l) && (u ? e.email = l : h && (e.name = e.name && null !== e.name ? e.name + " " + l : l), a.add(l)), s && o && r && !a.has(l) && (u ? e.email = l : h ? e.name = e.name && null !== e.name ? e.name + " " + l : l : d && (e.phone = i), a.add(l)) } })), isEqual(e)) return; const m = { type: "__trackocity-iframe_", data: e }; window.parent.postMessage(m, "*") }, inputContainsKeyword = (e, a) => a.some((a => !!e.toLowerCase().includes(a.toLowerCase()))); document.addEventListener("focusout", handleEvent), document.addEventListener("blur", handleEvent), document.addEventListener("change", handleEvent), document.addEventListener("submit", handleEvent), document.addEventListener("click", (e => { "BUTTON" === e.target.tagName && handleEvent() }));